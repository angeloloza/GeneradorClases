package com.cominvi.app.commons.models;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: com.cominvi.app.commons.models.EmpleadosEmpresas
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class EmpleadosEmpresasId implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("com.cominvi.app.commons.models.EmpleadosEmpresas"); }
		catch(Exception e) {}
	}

	public long idempleado;
	public long idempresa;

	public EmpleadosEmpresasId() {
	}

	public EmpleadosEmpresasId(String str) {
		fromString(str);
	}

	public long getIdempleado() {
		return idempleado;
	}

	public void setIdempleado(long idempleado) {
		this.idempleado = idempleado;
	}

	public long getIdempresa() {
		return idempresa;
	}

	public void setIdempresa(long idempresa) {
		this.idempresa = idempresa;
	}

	public String toString() {
		return String.valueOf(idempleado)
			+ "::" + String.valueOf(idempresa);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + (int) (idempleado ^ (idempleado >>> 32));
		rs = rs * 37 + (int) (idempresa ^ (idempresa >>> 32));
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		EmpleadosEmpresasId other = (EmpleadosEmpresasId) obj;
		return (idempleado == other.idempleado)
			&& (idempresa == other.idempresa);
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		idempleado = Long.parseLong(str);
		str = toke.nextToken();
		idempresa = Long.parseLong(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}